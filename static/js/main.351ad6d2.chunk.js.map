{"version":3,"sources":["components/UserCard/UserCard.js","components/Wrapper/Wrapper.js","components/Homepage.js","components/PostCard/PostCard.js","components/HeaderDetail/HeaderDetail.js","components/PostDialog/PostDialog.js","components/DialogContainer/DialogContainer.js","components/UserDetailsPage.js","components/CommentCard/CommentCard.js","components/CommentDialog/CommentDialog.js","components/CommentSection/CommentSection.js","components/PostDetailsPage.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","paper","padding","spacing","width","button","height","textDecoration","textTransform","container","buttonContainer","marginTop","alignSelf","marginBottom","UserCard","user","classes","Paper","className","Grid","direction","item","Typography","gutterBottom","name","href","underline","email","phone","split","website","company","catchPhrase","bs","to","id","Button","variant","minWidth","Wrapper","children","Container","Homepage","useState","users","setUsers","useEffect","fetch","then","response","json","map","xs","sm","md","post","display","boxOrient","lineClamp","wordBreak","overflow","flexWrap","marginLeft","PostCard","handleDelete","userId","useParams","alignItems","IconButton","onClick","color","fontSize","aria-label","title","empty","header","HeaderDetail","link","justifyContent","actions","paddingTop","validationSchema","yup","required","body","PostDialog","handleClose","handleAdd","formik","useFormik","initialValues","onSubmit","values","handleSubmit","DialogContent","TextField","value","onChange","handleChange","label","fullWidth","error","touched","Boolean","errors","helperText","multiline","rows","DialogActions","type","DialogContainer","open","Dialog","maxWidth","onClose","aria-labelledby","DialogTitle","UserDetailPage","setUser","posts","setPosts","setOpen","postId","filter","Promise","all","resUser","resPosts","jsonUser","jsonPosts","newPost","length","CommentCard","comment","Link","CommentDialog","CommentSection","comments","setComments","showComments","setShowComments","newComment","PostDetailPage","setPost","resPost","jsonPost","App","basename","process","path","exact","component","createTheme","palette","ReactDOM","render","ThemeProvider","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.351ad6d2.chunk.js","sourcesContent":["import {\n  Button,\n  Grid,\n  Link as MaterialLink,\n  makeStyles,\n  Paper,\n  Typography,\n} from \"@material-ui/core\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport React from \"react\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(2),\n    width: \"calc(100% + 16px)\",\n  },\n  button: {\n    width: \"100%\",\n    height: 72,\n    textDecoration: \"none\",\n    textTransform: \"none\",\n  },\n  container: {\n    height: \"calc(100% + 16px)\",\n  },\n  buttonContainer: {\n    marginTop: \"auto\",\n    width: \"90%\",\n    alignSelf: \"center\",\n    marginBottom: 8,\n  },\n}));\n\nconst UserCard = ({ user }) => {\n  const classes = useStyles();\n\n  return (\n    <Paper className={classes.paper}>\n      <Grid\n        className={classes.container}\n        container\n        spacing={2}\n        direction=\"column\"\n      >\n        <Grid item>\n          <Typography gutterBottom>\n            <b>{user.name}</b>\n          </Typography>\n        </Grid>\n        <Grid item>\n          <Typography>\n            <MaterialLink href=\"#\" underline=\"always\">\n              {user.email}\n            </MaterialLink>\n          </Typography>\n          <Typography>\n            <MaterialLink href=\"#\" underline=\"always\">\n              {user.phone.split(\" \")[0]}\n            </MaterialLink>\n          </Typography>\n          <Typography gutterBottom>\n            <MaterialLink href=\"#\" underline=\"always\">\n              {user.website}\n            </MaterialLink>\n          </Typography>\n        </Grid>\n        <Grid item>\n          <Typography>{user.company.name}</Typography>\n          <Typography>{user.company.catchPhrase}</Typography>\n          <Typography gutterBottom>\n            <b>{user.company.bs}</b>\n          </Typography>\n        </Grid>\n        <Grid item container className={classes.buttonContainer}>\n          <RouterLink className={classes.button} to={`/user/${user.id}`}>\n            <Button className={classes.button} variant=\"outlined\">\n              <Typography>Details</Typography>\n            </Button>\n          </RouterLink>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default UserCard;\n","import { Container, makeStyles } from \"@material-ui/core\";\nimport React from \"react\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    marginTop: theme.spacing(6),\n    minWidth: 350,\n  },\n}));\n\nconst Wrapper = ({ children }) => {\n  const classes = useStyles();\n\n  return <Container className={classes.container}>{children}</Container>;\n};\n\nexport default Wrapper;\n","import React, { useEffect, useState } from \"react\";\nimport UserCard from \"./UserCard/UserCard\";\n\nimport { Grid } from \"@material-ui/core\";\nimport Wrapper from \"./Wrapper/Wrapper\";\n\nconst Homepage = () => {\n  const [users, setUsers] = useState([]);\n\n  useEffect(() => {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => response.json())\n      .then((json) => setUsers(json));\n  }, []);\n\n  return (\n    <Wrapper>\n      <Grid container spacing={2}>\n        {users.map((user) => (\n          <Grid item container xs={12} sm={6} md={3} key={user.id}>\n            <UserCard user={user} />\n          </Grid>\n        ))}\n      </Grid>\n    </Wrapper>\n  );\n};\n\nexport default Homepage;\n","import {\n  Paper,\n  makeStyles,\n  Typography,\n  Grid,\n  IconButton,\n} from \"@material-ui/core\";\nimport React from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport ArrowForwardIosIcon from \"@material-ui/icons/ArrowForwardIos\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(2),\n  },\n  post: {\n    display: \"-webkit-box\",\n    boxOrient: \"vertical\",\n    lineClamp: 1,\n    wordBreak: \"break-all\",\n    overflow: \"hidden\",\n  },\n  container: {\n    flexWrap: \"nowrap\",\n  },\n  button: {\n    marginLeft: \"auto\",\n  },\n}));\n\nconst PostCard = ({ post, handleDelete }) => {\n  const classes = useStyles();\n  const { userId } = useParams();\n\n  return (\n    <Paper className={classes.paper}>\n      <Grid\n        container\n        className={classes.container}\n        spacing={1}\n        alignItems=\"center\"\n      >\n        <Grid item>\n          <IconButton\n            onClick={() => handleDelete(post.id)}\n            color=\"primary\"\n            fontSize=\"large\"\n            aria-label=\"delete\"\n          >\n            <DeleteIcon />\n          </IconButton>\n        </Grid>\n        <Grid className={classes.post} item>\n          <Typography>{post.title}</Typography>\n        </Grid>\n        <Grid item className={classes.button}>\n          <Link to={`/user/${userId}/${post.id}`}>\n            <IconButton color=\"primary\" fontSize=\"large\" aria-label=\"next\">\n              <ArrowForwardIosIcon />\n            </IconButton>\n          </Link>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default PostCard;\n","import { Grid, IconButton, makeStyles, Typography } from \"@material-ui/core\";\nimport React from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\n\nconst useStyles = makeStyles((theme) => ({\n  empty: {\n    width: 48,\n  },\n  header: {\n    marginBottom: theme.spacing(6),\n  },\n}));\n\nconst HeaderDetail = ({ user, link, children }) => {\n  const classes = useStyles();\n\n  return (\n    <Grid\n      item\n      container\n      justifyContent=\"space-between\"\n      alignItems=\"center\"\n      className={classes.header}\n    >\n      <RouterLink to={link}>\n        <IconButton color=\"primary\" fontSize=\"large\" aria-label=\"back\">\n          <ArrowBackIcon />\n        </IconButton>\n      </RouterLink>\n      <Typography variant=\"h6\">\n        <b>{user.name}</b>\n      </Typography>\n      {children ? children : <div className={classes.empty}></div>}\n    </Grid>\n  );\n};\n\nexport default HeaderDetail;\n","import {\n  DialogContent,\n  Grid,\n  TextField,\n  DialogActions,\n  Button,\n  makeStyles,\n} from \"@material-ui/core\";\nimport React from \"react\";\nimport { useFormik } from \"formik\";\nimport * as yup from \"yup\";\n\nconst useStyles = makeStyles((theme) => ({\n  actions: {\n    paddingTop: theme.spacing(4),\n  },\n}));\n\nconst validationSchema = yup.object({\n  title: yup.string(\"Enter a title\").required(\"Title is required\"),\n  body: yup.string(\"Enter a body\").required(\"Body is required\"),\n});\n\nconst PostDialog = ({ handleClose, handleAdd }) => {\n  const classes = useStyles();\n\n  const formik = useFormik({\n    initialValues: {\n      title: \"\",\n      body: \"\",\n    },\n    validationSchema: validationSchema,\n    onSubmit: (values) => {\n      handleAdd(values);\n      handleClose();\n    },\n  });\n\n  return (\n    <form onSubmit={formik.handleSubmit}>\n      <DialogContent>\n        <Grid container spacing={2} direction=\"column\">\n          <Grid item>\n            <TextField\n              name=\"title\"\n              value={formik.values.title}\n              onChange={formik.handleChange}\n              label=\"Title\"\n              fullWidth\n              variant=\"outlined\"\n              error={formik.touched.title && Boolean(formik.errors.title)}\n              helperText={formik.touched.title && formik.errors.title}\n            />\n          </Grid>\n\n          <Grid item>\n            <TextField\n              name=\"body\"\n              value={formik.values.body}\n              onChange={formik.handleChange}\n              label=\"Body\"\n              fullWidth\n              multiline\n              rows={4}\n              variant=\"outlined\"\n              error={formik.touched.body && Boolean(formik.errors.body)}\n              helperText={formik.touched.body && formik.errors.body}\n            />\n          </Grid>\n        </Grid>\n      </DialogContent>\n\n      <DialogActions className={classes.actions}>\n        <Button variant=\"outlined\" onClick={handleClose}>\n          Cancel\n        </Button>\n        <Button variant=\"contained\" type=\"submit\" color=\"primary\">\n          Save\n        </Button>\n      </DialogActions>\n    </form>\n  );\n};\n\nexport default PostDialog;\n","import React from \"react\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\nconst DialogContainer = ({ open, handleClose, title, children }) => {\n  return (\n    <Dialog\n      fullWidth\n      maxWidth=\"sm\"\n      open={open}\n      onClose={handleClose}\n      aria-labelledby=\"form-dialog-title\"\n    >\n      <DialogTitle id=\"form-dialog-title\">{title}</DialogTitle>\n\n      {children}\n    </Dialog>\n  );\n};\n\nexport default DialogContainer;\n","import { Grid, IconButton } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport PostCard from \"./PostCard/PostCard\";\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\nimport HeaderDetail from \"./HeaderDetail/HeaderDetail\";\nimport Wrapper from \"./Wrapper/Wrapper\";\nimport PostDialog from \"./PostDialog/PostDialog\";\nimport DialogContainer from \"./DialogContainer/DialogContainer\";\n\nconst UserDetailPage = () => {\n  const [user, setUser] = useState({});\n  const [posts, setPosts] = useState([]);\n  const [open, setOpen] = useState(false);\n\n  const { userId } = useParams();\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleDelete = (postId) => {\n    setPosts(posts.filter((post) => post.id !== postId));\n  };\n\n  const handleAdd = (newPost) => {\n    newPost.id = 91 + posts.length;\n    setPosts((posts) => [...posts, newPost]);\n  };\n\n  useEffect(() => {\n    Promise.all([\n      fetch(`https://jsonplaceholder.typicode.com/users/${userId}`),\n      fetch(`https://jsonplaceholder.typicode.com/users/${userId}/posts`),\n    ])\n      .then(([resUser, resPosts]) =>\n        Promise.all([resUser.json(), resPosts.json()])\n      )\n      .then(([jsonUser, jsonPosts]) => {\n        setUser(jsonUser);\n        setPosts(jsonPosts);\n      });\n  }, [userId]);\n\n  return (\n    <Wrapper>\n      <Grid container spacing={2}>\n        <HeaderDetail user={user} link=\"/\">\n          <IconButton\n            onClick={handleClickOpen}\n            color=\"primary\"\n            fontSize=\"large\"\n            aria-label=\"add\"\n          >\n            <AddCircleIcon />\n          </IconButton>\n        </HeaderDetail>\n\n        <Grid item container spacing={2} direction=\"column\">\n          {posts.map((post) => (\n            <Grid item xs={12} key={post.id}>\n              <PostCard post={post} handleDelete={handleDelete} />\n            </Grid>\n          ))}\n        </Grid>\n        <DialogContainer open={open} handleClose={handleClose} title=\"Add post\">\n          <PostDialog handleClose={handleClose} handleAdd={handleAdd} />\n        </DialogContainer>\n      </Grid>\n    </Wrapper>\n  );\n};\n\nexport default UserDetailPage;\n","import { Link, Typography } from \"@material-ui/core\";\nimport { Grid, makeStyles, Paper } from \"@material-ui/core\";\nimport React from \"react\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(2),\n  },\n}));\n\nconst CommentCard = ({ comment }) => {\n  const classes = useStyles();\n\n  return (\n    <Paper className={classes.paper}>\n      <Grid container spacing={2}>\n        <Grid item container justifyContent=\"space-between\">\n          <Typography>\n            <b>{comment.name}</b>\n          </Typography>\n          <Link href=\"#/\" underline=\"always\">\n            <Typography>{comment.email}</Typography>\n          </Link>\n        </Grid>\n        <Grid item>\n          <Typography>{comment.body}</Typography>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default CommentCard;\n","import {\n  Button,\n  DialogActions,\n  DialogContent,\n  Grid,\n  makeStyles,\n  TextField,\n} from \"@material-ui/core\";\nimport React from \"react\";\nimport { useFormik } from \"formik\";\nimport * as yup from \"yup\";\n\nconst useStyles = makeStyles((theme) => ({\n  actions: {\n    paddingTop: theme.spacing(4),\n  },\n}));\n\nconst validationSchema = yup.object({\n  name: yup.string(\"Enter your name\").required(\"Name is required\"),\n  email: yup\n    .string(\"Enter your email\")\n    .email(\"Enter a valid email\")\n    .required(\"Email is required\"),\n  body: yup.string(\"Enter a body\").required(\"Body is required\"),\n});\n\nconst CommentDialog = ({ handleAdd, handleClose }) => {\n  const classes = useStyles();\n\n  const formik = useFormik({\n    initialValues: {\n      name: \"\",\n      email: \"\",\n      body: \"\",\n    },\n    validationSchema: validationSchema,\n    onSubmit: (values) => {\n      handleAdd(values);\n      handleClose();\n    },\n  });\n\n  return (\n    <form onSubmit={formik.handleSubmit}>\n      <DialogContent>\n        <Grid container spacing={2} direction=\"column\">\n          <Grid item>\n            <TextField\n              name=\"name\"\n              value={formik.values.name}\n              onChange={formik.handleChange}\n              label=\"Name\"\n              fullWidth\n              variant=\"outlined\"\n              error={formik.touched.name && Boolean(formik.errors.name)}\n              helperText={formik.touched.name && formik.errors.name}\n            />\n          </Grid>\n\n          <Grid item>\n            <TextField\n              name=\"email\"\n              value={formik.values.email}\n              onChange={formik.handleChange}\n              label=\"Email\"\n              type=\"email\"\n              fullWidth\n              variant=\"outlined\"\n              error={formik.touched.email && Boolean(formik.errors.email)}\n              helperText={formik.touched.email && formik.errors.email}\n            />\n          </Grid>\n\n          <Grid item>\n            <TextField\n              name=\"body\"\n              value={formik.values.body}\n              onChange={formik.handleChange}\n              label=\"Body\"\n              fullWidth\n              multiline\n              rows={4}\n              variant=\"outlined\"\n              error={formik.touched.body && Boolean(formik.errors.body)}\n              helperText={formik.touched.body && formik.errors.body}\n            />\n          </Grid>\n        </Grid>\n      </DialogContent>\n\n      <DialogActions className={classes.actions}>\n        <Button variant=\"outlined\" onClick={handleClose}>\n          Cancel\n        </Button>\n        <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n          Save\n        </Button>\n      </DialogActions>\n    </form>\n  );\n};\n\nexport default CommentDialog;\n","import { Grid, Link as MaterialLink, Typography } from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport CommentCard from \"../CommentCard/CommentCard\";\nimport CommentDialog from \"../CommentDialog/CommentDialog\";\nimport DialogContainer from \"../DialogContainer/DialogContainer\";\n\nconst CommentSection = ({ comments, setComments }) => {\n  const [showComments, setShowComments] = useState(false);\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleAdd = (newComment) => {\n    newComment.id = 496 + comments.length;\n    setComments((comments) => [...comments, newComment]);\n  };\n\n  return (\n    <>\n      <Grid item container justifyContent=\"space-between\">\n        <MaterialLink\n          onClick={() => setShowComments(!showComments)}\n          href=\"#/\"\n          underline=\"always\"\n        >\n          {showComments ? (\n            <Typography>Hide commments</Typography>\n          ) : (\n            <Typography>Show comments</Typography>\n          )}\n        </MaterialLink>\n\n        {showComments ? (\n          <MaterialLink href=\"#/\" onClick={handleClickOpen} underline=\"always\">\n            <Typography>Add comment</Typography>\n          </MaterialLink>\n        ) : null}\n      </Grid>\n      {showComments ? (\n        <Grid item container spacing={2} direction=\"column\">\n          {comments.map((comment) => (\n            <Grid item xs={12} key={comment.id}>\n              <CommentCard comment={comment} />\n            </Grid>\n          ))}\n        </Grid>\n      ) : null}\n\n      <DialogContainer\n        open={open}\n        handleClose={handleClose}\n        title=\"Add comment\"\n      >\n        <CommentDialog handleAdd={handleAdd} handleClose={handleClose} />\n      </DialogContainer>\n    </>\n  );\n};\n\nexport default CommentSection;\n","import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport { Grid, Typography } from \"@material-ui/core\";\nimport HeaderDetail from \"./HeaderDetail/HeaderDetail\";\nimport Wrapper from \"./Wrapper/Wrapper\";\nimport CommentSection from \"./CommentSection/CommentSection\";\n\nconst PostDetailPage = () => {\n  const [user, setUser] = useState({});\n  const [post, setPost] = useState({});\n  const [comments, setComments] = useState([]);\n\n  const { userId, postId } = useParams();\n\n  useEffect(() => {\n    Promise.all([\n      fetch(`https://jsonplaceholder.typicode.com/users/${userId}`),\n      fetch(\n        `https://jsonplaceholder.typicode.com/posts?userId=${userId}&id=${postId}&_embed=comments`\n      ),\n    ])\n      .then(([resUser, resPost]) =>\n        Promise.all([resUser.json(), resPost.json()])\n      )\n      .then(([jsonUser, [jsonPost]]) => {\n        setUser(jsonUser);\n        setPost(jsonPost);\n        setComments(jsonPost?.comments || []);\n      });\n  }, [userId, postId]);\n\n  return (\n    <Wrapper>\n      <Grid container spacing={2}>\n        <HeaderDetail user={user} link={`/user/${user.id}`} />\n\n        <Grid item>\n          <Typography gutterBottom variant=\"h5\">\n            <b>{post?.title}</b>\n          </Typography>\n        </Grid>\n        <Grid item>\n          <Typography gutterBottom>{post?.body}</Typography>\n        </Grid>\n        <CommentSection setComments={setComments} comments={comments} />\n      </Grid>\n    </Wrapper>\n  );\n};\n\nexport default PostDetailPage;\n","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport Homepage from \"./components/Homepage\";\nimport UserDetailPage from \"./components/UserDetailsPage\";\nimport PostDetailPage from \"./components/PostDetailsPage\";\n\nconst App = () => {\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route path=\"/\" exact component={Homepage} />\n        <Route path=\"/user/:userId\" exact component={UserDetailPage} />\n        <Route path=\"/user/:userId/:postId\" exact component={PostDetailPage} />\n      </Switch>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { createTheme, ThemeProvider, CssBaseline } from \"@material-ui/core\";\n\nconst theme = createTheme({\n  palette: {\n    type: \"light\",\n  },\n});\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <CssBaseline />\n    <App />\n  </ThemeProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}